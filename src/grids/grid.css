/* контейнер сетки */
.grid {
  display: grid;
}

/* навешивается на контейнер, указывает количество колонок сетки от 1 до 12 */
.grid-col-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-col-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-col-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-col-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.grid-col-5 {
  grid-template-columns: repeat(5, minmax(0, 1fr));
}

.grid-col-6 {
  grid-template-columns: repeat(6, minmax(0, 1fr));
}

.grid-col-7 {
  grid-template-columns: repeat(7, minmax(0, 1fr));
}

.grid-col-8 {
  grid-template-columns: repeat(8, minmax(0, 1fr));
}

.grid-col-9 {
  grid-template-columns: repeat(9, minmax(0, 1fr));
}

.grid-col-10 {
  grid-template-columns: repeat(10, minmax(0, 1fr));
}

.grid-col-11 {
  grid-template-columns: repeat(11, minmax(0, 1fr));
}

.grid-col-12 {
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

/* навешивается на элемент сетки, указывает сколько колонок будет занимать данные элемент(объенинение колонок) */
col-span-1 {
  grid-column: span 1 / span 1;
}

col-span-2 {
  grid-column: span 2 / span 2;
}

col-span-3 {
  grid-column: span 3 / span 3;
}

col-span-4 {
  grid-column: span 4 / span 4;
}

col-span-5 {
  grid-column: span 5 / span 5;
}

col-span-6 {
  grid-column: span 6 / span 6;
}

col-span-7 {
  grid-column: span 7 / span 7;
}

col-span-8 {
  grid-column: span 8 / span 8;
}

col-span-9 {
  grid-column: span 9 / span 9;
}

col-span-10 {
  grid-column: span 10 / span 10;
}

col-span-11 {
  grid-column: span 11 / span 11;
}

col-span-12 {
  grid-column: span 12 / span 12;
}

/* навешивается на контейнер, указывает количество строк сетки от 1 до 6 */
.grid-row-1 {
  grid-template-rows: repeat(1, minmax(0, 1fr));
}

.grid-row-2 {
  grid-template-rows: repeat(2, minmax(0, 1fr));
}

.grid-row-3 {
  grid-template-rows: repeat(3, minmax(0, 1fr));
}

.grid-row-4 {
  grid-template-rows: repeat(4, minmax(0, 1fr));
}

.grid-row-5 {
  grid-template-rows: repeat(5, minmax(0, 1fr));
}

.grid-row-6 {
  grid-template-rows: repeat(6, minmax(0, 1fr));
}

/* навешивается на элемент сетки, указывает сколько строк будет занимать данные элемент(объенинение строк) */
row-span-1 {
  grid-row: span 1 / span 1;
}

row-span-2 {
  grid-row: span 2 / span 2;
}

row-span-3 {
  grid-row: span 3 / span 3;
}

row-span-4 {
  grid-row: span 4 / span 4;
}

row-span-5 {
  grid-row: span 5 / span 5;
}

row-span-6 {
  grid-row: span 6 / span 6;
}

/* TODO: можно дописать чтобы можно было приминять для разных экранов(как флексы) но на чистом css это очень много кода */
